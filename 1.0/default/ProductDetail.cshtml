@inherits RocketEcommerce.Components.RocketEcommerceTokens<Simplisity.SimplisityRazor>
@using Simplisity;
@using RocketEcommerce.Components;
@using DNNrocketAPI.Components;

@AddProcessData("resourcepath", "/DesktopModules/DNNrocket/api/App_LocalResources/")
@AddProcessData("resourcepath", "/DesktopModules/DNNrocketModules/RocketECommerce/App_LocalResources/")

@{
    var productData = (ProductLimpet)Model.GetDataObject("productdata");
    var companyData = (CompanyLimpet)Model.GetDataObject("companydata"); ;
    var remoteParam = (RemoteLimpet)Model.GetDataObject("remoteparam");
    var cartData = (CartLimpet)Model.GetDataObject("cartdata");
    var sessionParams = (SessionParams)Model.GetDataObject("sessionparams");

    var appThemeFolder = productData.PortalShop.AppTheme.AppThemeFolder;
    var portalShop = productData.PortalShop;

    // We need the moduleid, the first remote call will have the moduleid, subsequent call need to have the remote module passed by the s-field
    var moduleId = Model.ModuleId;
    var tabId = Model.TabId;
    if (remoteParam != null)
    {
        moduleId = remoteParam.ModuleId;
        tabId = remoteParam.TabId;
    }

}

@AddProcessData("resourcepath", "/DesktopModules/RocketThemes/rocketecommerce/" + portalShop.AppTheme.AppThemeFolder + "/" + portalShop.AppTheme.AppVersionFolder + "/resx/")

<!-- we need to add the search banner, so we can goto the product list from the category. -->
<div style="display:none;">
    @RenderTemplate("SearchBanner.cshtml", "/DesktopModules/RocketThemes/rocketecommerce", portalShop.AppTheme.AppThemeFolder, Model, "1.0", true)
</div>

<div class="productdetailflex">

    <div class="productdetail">

        <div id="datasection">

            <div id="datalist2">
                @{
                    var logoRelPath = productData.LogoRelPath;
                    if (productData.LogoRelPath == "")
                    {
                        logoRelPath = "/DesktopModules/DNNrocket/api/images/noimage2.png";
                    }
                }

                <a href="@productData.UrlTokens(portalShop.ProductListPageUrl).Replace("{catid}",sessionParams.Get("searchcategoryid"))" class="w3-button ajaxproductlist" style="float:right;" s-cmd="rocketecommerce_productlist" s-return='#ecommerce-tag' s-fields='{"systemkey":"rocketecommerce","template":"ProductList.cshtml"}' title="@productData.Name">@ButtonText(ButtonTypes.back, remoteParam.CultureCode)</a>

                <h1>@productData.Name</h1>
                <div>@(productData.Ref)</div>
                <div class="w3-animate-opacity  productdatasection" id="productdatasection@(productData.ProductId)">

                    <div class="productquickview">

                        <div class="quickviewimage">
                            <img src="@ThumbnailImageWebsiteDomainUrl(productData.PortalShop.EngineUrlWithProtocol,logoRelPath,450, 450)"  popupsrc="@ThumbnailImageWebsiteDomainUrl(productData.PortalShop.EngineUrlWithProtocol, logoRelPath, 800, 0)" class="imgrollovertarget" alt="@productData.Name" onclick="popupImage(this)" />
                            @if (productData.GetImages().Count > 1)
                            {
                            <div class="quickviewgallery">
                                @{
                                var imgLp = 1;
                                }
                                @foreach (var i in productData.GetImages())
                            {
                                if (imgLp <= 5)
                                {
                                <img src="@ThumbnailImageWebsiteDomainUrl(productData.PortalShop.EngineUrlWithProtocol, i.RelPath, 450, 450)" popupsrc="@ThumbnailImageWebsiteDomainUrl(productData.PortalShop.EngineUrlWithProtocol, i.RelPath, 800, 0)" class="imgrollover" />
                                }
                                imgLp += 1;
                            }
                            </div>
                            }
                        </div>

                        <div class="quickviewcontent">

                            @if (productData.GetModelList().Count > 1)
                            {
                                <div class="w3-hide-small "><b>@ResourceKey("RE.from", remoteParam.CultureCode)</b></div>
                            }

                            @if (productData.SalePriceMinimum > 0)
                            {
                                <div class="quickviewprice">
                                    <span>&nbsp;@productData.SalePriceMinimumDisplay()</span>
                                    <span style="text-decoration:line-through;" class="w3-small">@productData.PriceMinimumDisplay()</span>
                                </div>
                            }
                            else
                            {
                                <div class="quickviewprice">
                                    @productData.PriceMinimumDisplay()
                                </div>
                            }
                            <div class="quickviewsummary">@BreakOf(productData.Summary)</div>
                            <div class="quickviewmodels">
                                @{
                                    var displaymodels = "displaymodels";
                                }
                                @if (productData.GetModels().Count > 1)
                                {
                                    displaymodels = "";
                                }
                                <div id="modelinput@(productData.ProductId)" class="w3-border w3-white w3-margin-bottom modelinput @displaymodels">@ModelDropdown(productData)</div>
                                <div id="optionsinput@(productData.ProductId)" class="w3-white w3-margin-bottom modelinput">@OptionsInput(productData)</div>
                            </div>
                            
                            <div id="qtyinput@(productData.ProductId)" class="quickviewactions">
                                <div class="quickviewqty">
                                    <div class="w3-bar">
                                        <div class="w3-bar-item w3-border w3-col w3-center w3-button product-subtract" productid="@(productData.ProductId)">&minus;</div>
                                        <input class="w3-bar-item w3-col w3-input w3-border-top w3-border-bottom w3-center qtyvalue" id="qty@(productData.ProductId)" s-xpath="genxml/textbox/qty" value="1" style="width:60px;" />
                                        <div class="w3-bar-item w3-border w3-col w3-center w3-button product-plus" productid="@(productData.ProductId)">&plus;</div>
                                    </div>
                                </div>
                                <div class="quickviewbuy">
                                    <a href="javascript:void(0)" rel="nofollow" class="w3-button simplisity_click buybutton" s-before="beforebuy" s-after="afterbuy" s-return="#addtocartreturn" s-cmd="rocketecommerce_addtocart" s-post="#productdatasection@(productData.ProductId)" s-fields='{"productid":"@productData.ProductId"}' title="@ResourceKey("RE.addtobasket", remoteParam.CultureCode)" style="width:60px;"><i class="fa fa-shopping-cart"></i></a>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>

        </div>

    </div>

    <div class="productlistside">

        <!-- Cart (Include design to stop flicker on the page) -->
        <div id="minicartdisplay" class="productlistcart">
            <h3>@ResourceKey("RE.cart", remoteParam.CultureCode)</h3>
            <div class="w3-border-bottom w3-margin-bottom">0 @ResourceKey("RE.items", remoteParam.CultureCode)</div>
            <div class="w3-margin-bottom"><strong>@(portalShop.CurrenyDisplay(0))</strong></div>
            <a id="cartdisplay" class="w3-button w3-light-grey simplisity_click " s-cmd="rocketecommerce_cartlist" s-return='.ecommerce-container' s-fields='{"systemkey":"rocketecommerce","template":"cartlist.cshtml"}'><i class='fa fas fa-shopping-cart'></i>&nbsp;@(ResourceKey("RE.viewcart", remoteParam.CultureCode))</a>
        </div>

        <div class="productlistcat">
            @RenderTemplate("CategorySideMenu.cshtml", "/DesktopModules/RocketThemes/RocketEcommerce", productData.PortalShop.AppTheme.AppThemeFolder, Model, "1.0", true)
        </div>
        
    </div>

</div>

<div id="modalimgPopup" class="w3-modal w3-center" onclick="this.style.display='none'">
    <img class="w3-animate-zoom" id="imgPopup" style="">
</div>

<script>

    $(document).ready(function () {

        $('.clearsearch').unbind("click");
        $('.clearsearch').click(function () {
            $('#searchtext').val('');
            $('.dosearch').trigger('click');
            return false; // prevent the button click from happening
        });

        if ($('#searchtext').val() !== '') {
            $('.dosearch').hide();
            $('.clearsearch').show();
        }

        $('.actionentrykey').unbind('keypress');
        $('.actionentrykey').on('keypress', function (e) {
            if (e.keyCode == 13) {
                $('.dosearch').trigger('click');
                return false; // prevent the button click from happening
            }
        });

        //$('.actionentrykey').focus();

        // move cursor to end of line
        var tmpStr = $('.actionentrykey').val();
        $('.actionentrykey').val('');
        $('.actionentrykey').val(tmpStr);

        //  change color of panel, s we show it has a selection
        if (tmpStr != '') {
            $('#searchtext').addClass('w3-border-red');
        }

        $('.ajaxproductlist').unbind("click");
        $('.ajaxproductlist').click(function (event) {
            event.preventDefault();

            // add to browser bar and history
            var stateObj = { "":"" };
            history.pushState(stateObj, "Title", $(this).attr("href"));

            simplisity_callserver($(this))

        });

        // CART EVENTS
        $('.product-subtract').unbind("click");
        $('.product-subtract').click(function () {
            updateQty($(this).attr("productid"), -1)
            return false; // prevent the button click from happening
        });
        $('.product-plus').unbind("click");
        $('.product-plus').click(function () {
            updateQty($(this).attr("productid"), 1)
            return false; // prevent the button click from happening
        });

        $('.imgrollover').unbind("mouseover");
        $(".imgrollover").mouseover(function () {            
            $('.imgrollovertarget').attr('src', $(this).attr('src')) ;
            $('.imgrollovertarget').attr('popupsrc', $(this).attr('popupsrc'));
        });
        

        // update the cart display.
        // If this is a remote module, it will NOT know the "browserid" and therefore we need to call the cart update from the browser.
        // When we call it on page load, we pass the browserid, through simplisityJS.  This allows us to get the cart data.
        // After the call return, we activate the simplisity panel, to make the page work correctly.
        $('#minicartdisplay').getSimplisity('@(productData.PortalShop.EngineUrlWithProtocol)/Desktopmodules/dnnrocket/api/rocket/action', 'rocketecommerce_minicart', '{"systemkey":"rocketecommerce","template":"minicart.cshtml"}', "activatesimplisitypanel");

        var toastedfirstload = sessionStorage.getItem("toastedfirstload");
        if (toastedfirstload === 'false') {
            $('html, body').animate({
                scrollTop: $('.productdetail').offset().top
            }, 500, function () {
            });
        }
        sessionStorage.setItem("toastedfirstload", "false");



    });

    function updateQty(productid, addvalue) {
        var qty = parseInt($('#qty' + productid).val());
        var newqty = qty + addvalue;
        if (newqty < 1) newqty = 1;
        $('#qty' + productid).val(newqty);
    }

        function beforebuy() {
                $('.w3-modal').hide();
        }
        function afterbuy() {
            $('#minicartdisplay').getSimplisity('@(productData.PortalShop.EngineUrlWithProtocol)/Desktopmodules/dnnrocket/api/rocket/action', 'rocketecommerce_minicart', '{"systemkey":"rocketecommerce","template":"minicart.cshtml"}', "activatesimplisitypanel");
        }
        function showproductmodel(productid) {
            $('#qty' + productid).val('1');
            document.getElementById('productmodelid' + productid).style.display='block'
        }
        function activatesimplisitypanel() {
            $('.ecommerce-container').activateSimplisityPanel('@(productData.PortalShop.EngineUrlWithProtocol)/Desktopmodules/dnnrocket/api/rocket/action')
        }

    function popupImage(element) {
        document.getElementById("imgPopup").src = $(element).attr("popupsrc");
        document.getElementById("modalimgPopup").style.display = "block";
    }
</script>
